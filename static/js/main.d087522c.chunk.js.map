{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","items","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","pages","isFirstPage","isLastPage","i","push","page","className","cn","disabled","href","onClick","map","active","nextPage","item","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","itemsSize","length","startItem","endItem","min","visibleItems","slice","id","defaultValue","onChange","event","Number","currentTarget","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNAWaA,EAA8B,SAAC,GAY1C,IANK,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQ,GACRC,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAE1BM,EAAI,EAAGA,GAAKN,EAAYM,GAAK,EACpCH,EAAMI,KAAKD,GAGb,IAAkBE,EAYlB,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAAUP,IAHhB,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeR,EACfS,SA1BQL,EA0BUV,EA1BO,WAC7BU,EAAO,GAAc,IAATA,GACdT,EAAaS,EAAO,KAmBhB,oBAUDL,EAAMW,KAAI,SAAAN,GAAI,OACb,oBAEEC,UAAWC,IACT,YACA,CAAEK,OAAQP,IAASV,IAJvB,SAOE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMd,EAAaS,IAJ9B,SAMGA,KAZEA,MAiBT,oBACEC,UAAWC,IACT,YACA,CAAEC,SAAUN,IAHhB,SAME,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QAvDO,SAACL,GAAD,OAAkB,WAC7BA,EAAOR,GAAcQ,IAASR,GAChCD,EAAaS,EAAO,IAqDLQ,CAASlB,GALpB,uBAWJ,6BACGH,EAAMmB,KAAI,SAAAG,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC3F5BtB,ECLC,SAAoBuB,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQb,KAAKc,GAGf,OAAOD,EDFKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB4B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB4B,EAApB,KAEMC,EAAYhC,EAAMiC,OAClBC,EAAYhC,EAAUC,EAAcD,EACpCiC,EAAU7B,KAAK8B,IAAIF,EAAYhC,EAAS8B,GACxCK,EAAerC,EAAMsC,MAAMJ,EAAWC,GAO5C,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SAEI,eAAQX,EAAR,sBACY+B,EAAY,EADxB,cAC+BC,GAD/B,cAESH,EAFT,OAMJ,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACV0B,aAAc,EACdC,SAxBa,SAACC,GACtBZ,EAAWa,OAAOD,EAAME,cAAcC,QACtCd,EAAe,IAiBT,UAOE,wBAAQc,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAGJ,uBAAOC,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAAOqC,EACPpC,MAAO+B,EACP9B,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACS,GACTA,IAASV,GACX4B,EAAelB,UE1D3BkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d087522c.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  items: string[],\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const pages = [];\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pagesCount;\n\n  for (let i = 1; i <= pagesCount; i += 1) {\n    pages.push(i);\n  }\n\n  const prevPage = (page: number) => () => {\n    if (page > 0 && page !== 1) {\n      onPageChange(page - 1);\n    }\n  };\n\n  const nextPage = (page: number) => () => {\n    if (page < pagesCount && page !== pagesCount) {\n      onPageChange(page + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn(\n            'page-item',\n            { disabled: isFirstPage },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={prevPage(currentPage)}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={cn(\n              'page-item',\n              { active: page === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={cn(\n            'page-item',\n            { disabled: isLastPage },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={nextPage(currentPage)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const itemsSize = items.length;\n  const startItem = perPage * currentPage - perPage;\n  const endItem = Math.min(startItem + perPage, itemsSize);\n  const visibleItems = items.slice(startItem, endItem);\n\n  const perPageHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.currentTarget.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {\n          `Page ${currentPage} `\n          + `(items ${startItem + 1} - ${endItem}`\n          + ` of ${itemsSize})`\n        }\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={5}\n            onChange={perPageHandler}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={visibleItems}\n        total={itemsSize}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          if (page !== currentPage) {\n            setCurrentPage(page);\n          }\n        }}\n      />\n\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}